1. 내장함수
 1) 숫자 함수 - P213
	ABS() -> 절대값(음수 -> 양수)
	CEIL() -> 올림 
	FLOOR() -> 버림 
	ROUND(숫자, 자리수) -> 반올림
	LOG() 
	POWER() -> 제곱 
	SQRT() -> 제곱근
	SIGN() -> 음수 -> -1, 양수 1, 0 -> 0 
	
	P214 - 
	4.3  -> 고객별 평균 주문금액 -> 백원단위로 반올림 한 값 
			Orders 
			GROUP BY custid 
			
			
 2) 문자 함수 - P215
	CONCAT(s1, s2) -> s1, s2 문자 결합 
	LOWER(s) -> 대문자 -> 소문자
	UPPER(s) -> 소문자 -> 대문자
	LPAD(s, 갯수, 채울 문자) 
	RPAD(s, 갯수, 채울 문자)
 
	REPLACE(문자, "찾을 문자(열)", "치환할 문자(열)")
	SUBSTR(문자열, 시작위치, 자를 문자열 갯수)
	TRIM( '제거할 문자' FROM  '문자열');

	LENGTH -> 문자열의 바이트 수(알파벳, 숫자, - 1byte , 한글(UTF-8) - 1자 - 3byte)
		            한글(EUC-KR) - 2byte
					
	CHAR_LENGTH -> 문자열의 갯수(바이트 수 상관 없이 문자의 갯수)
	ASCII('문자') -> 숫자 아스키 코드
	
	4-4 REPLACE
	4-5 굿스포츠에서 출판한 도서의 제목, + 제목의 바이트 + 문자수 
	4-6 - 고객 중에서 같은 성(이름성씨)을 가진 인원수 
	
	
	
 3) 날짜 함수 - P218 
	STR_TO_DATE -> 문자열(VACHAR, CHAR) -> 날짜(DATE)
	DATE_FORMAT -> 날짜(DATE, DATETIME) -> 문자열(특정 format으로)
							2021-09-16   -> 2021/09/16
	ADDDATE -> 날짜 이후, 이전 
						ADDDATE(날짜, INTERVAL 10 DAY) -> 10일 후 
						ADDDATE(날짜, INTERVAL -10 DAY) -> 10일 전
						
	DATE -> DATETIME -> DATE (날짜 + 시간  -> 날짜)
	DATEDIFF -> 날짜 사이의 간격 
	SYSDATE() -> DBMS 시스템 날짜시간
	
	
	format - P219
	%Y -> 2021
	%y -> 21
	%m -> 09(월)
	%d -> 16(일)
	
	%H -> 24시 기준 시간 
	%h -> 12시 기준 시간 
	%i -> 분
	%s -> 초


	%w -> 요일 (0~6)  일(0) ~ 토(6)
	new Date().getDay() -> 0 ~ 6

	P218
	4-7 주문일 -> 10일 -> 주문 확정일
	4-8, DATE_FORMAT 
	      STR_TO_DATE 
		  
		  날짜 형식 바꾸는 경우
		  
	4-9 

	P221
	NULL  - 값이 입력되지 않은 상태
			 -> 빈값(X), 0(X), 공백(X)
				  ' '
			  -> 비교 연산 X
			  -> 속성 = NULL (X - 비교 연산)
			  -> IS NULL  -> NULL인 경우 
			  -> IS NOT NULL -> NULL이 아닌 경우 
			  
			  NULL -> 연산 X 
			  SUM, AVG -> NULL
			  COUNT() -> 0
	
	
	IFNULL
	
	변수 
	SET @변수명:=값;
	
	
	부속질의 
	- 하나의 SQL문 안에 다른 SQL 문이 중첩된 질의
	1) 스칼라 부속질의
				SELECT ........., UPDATE SET .... 
				스칼라 = 단일값 
				
	2) 인라인 뷰 
			FROM ....  -> 가상의 뷰
			
	3) 중첩질의
		WHERE 조건에 - 상관 부속질의 
					          비상관 부속질의
							  
							  단일 -> 비교조건
							  =, >, < 
							  
							  복수 -> 집합 연산(IN, NOT IN)
							  
	P226 
	스칼라 부속질의 - SELECT 속성... , UPDATE SET ... 
	4-21. 고객별 판매액(+고객이름)
			GROUP BY custid 
	
	P228
			UPDATE SET 
			
	인라인뷰 - FROM 부속질의 (가상의 뷰)
	P229
	4-14
	고객번호가 2 이하인 고객의 판매액(고객이름 + 고객별 판매액)
	
	P230 
	중첩질의 - WHERE 부속질의
	표4-7 
	비교 -> 단일값 
	한정 -> ALL(최대값), SOME(ANY)(최소값)
	
	P231 - 4-15 
	평균 주문금액 이하의 주문에 대해서(주문번호, 금액)
	
	P232
	IN(교집합), NOT IN(차집합)
	4-17
	(대한민국에 거주하는 고객)에 판매한 도서의 총판매액	
		Customer                             Orders
		
		
	ALL -> 최대값 
	SOME(ANY) -> 최소값
	
	P233 - 4-18
	3번 고객이 주문한 도서의 최고 금액보다 더 비싼 도서를 구입한 
	주문(주문번호 + 판매액)
	
	EXISTS, NOT EXISTS 
	4-19. EXISTS  연산자를 사용 
		대한민국에 거주하는 고객에게 판매한 도서의 총 판매액을 구하시오
		
	
	
	뷰 -> 가상 테이블
			(물리적 데이터, DBMS -> SQL 질의문 -> 결과)
		
	뷰의 생성
	CREATE VIEW 뷰 이름
	AS SELECT 문
	P238 
	4-20
	주소에 '대한민국'을 포함하는 고객들로 구성된 뷰
	(vw_Customer)
		
	P239 뷰의 수정
	4-22 영국에 거주하는 고객
	CREATE OR REPLACE VIEW 뷰이름 
	AS SELECT 문 
	
	4-21 
	orderid, bookname, saleprice, name 
	Orders    Book                     Customer 
	
	vw_Orders
	
	DROP VIEW 뷰이름;
	
	P240 -> vw_Customer
	
	
	INFORMATION_SCHEMA -> DBMS의 전반적인 정보
	
	인덱스
	  목차, 색인
	  
	  데이터 + 인덱스 -> BTREE -> 이진트리
	  클러스터 인덱스 
		- 기본키(PK)
		- UNIQUE 
		- MySQL 자체 생성 row_id 
		
	  보조인덱스
		클러스터 인덱스가 아닌 인덱스
		
		보조인덱스 -> 클러스터 인덱스의 키 -> 레코드 검색
		
		
		
		CREATE INDEX 인덱스 명 ON 테이블명(속성, ... 속성)
		